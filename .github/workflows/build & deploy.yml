# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to Amazon EC2

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  pull_request:
    branches: [ "dev" ]

# Env variables
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: stamp-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: stamp-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: stamp-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    environment: production

    steps:
    # 1. download src codes
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: 'dev'

    # 2. set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    # 3. Build with Gradle
    - name: Build with Gradle
      uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1
      with:
        arguments: clean build -x test  ## exclude test

    # 4. Authorize AWS IAM user
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
        aws-region: ${{ env.AWS_REGION }}

    # 5. Upload JAR file to s3 bucket
    - name: Upload to AWS s3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # 6. Run a file that place at s3 bucket
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
